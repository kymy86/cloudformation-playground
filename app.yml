AWSTemplateFormatVersion: "2010-09-09"
Description: Stack with EC2, BastionHost and RDS
Parameters:
  KeyName:
    Description: Key Pair Name
    Type: AWS::EC2::KeyPair::KeyName
  VPCCidrBlock:
    Type: String
    Description: The VPC CIDR Block
    Default: "10.0.0.0/16"
    AllowedPattern: (\d{1,3}\.){3}\d{1,3}(\/(1[6-9]|2[0-8]))
    ConstraintDescription: Valid VPC CIDR is between /16 and /28
  SSHCidr:
    Type: String
    Description: The CIDR block from where the SSH access to the bastion host is allowed
    AllowedPattern: (\d{1,3}\.){3}\d{1,3}(\/([0-9]|[1-2][0-9]|3[0-2]))
  PublicSubnetCidrBlock:
    Type: String
    Description: Public subnet CIDR Block
    Default: "10.0.1.0/24"
    AllowedPattern: (\d{1,3}\.){3}\d{1,3}(\/(1[6-9]|2[0-8]))
    ConstraintDescription: Valid Subnet CIDR is between /16 and /28
  PrivateSubnetCidrBlock:
    Type: String
    Description: Private subnet CIDR Block
    Default: "10.0.2.0/24"
    AllowedPattern: (\d{1,3}\.){3}\d{1,3}(\/(1[6-9]|2[0-8]))
  PrivateSubnetCidrBlock2:
    Type: String
    Description: Private subnet CIDR Block
    Default: "10.0.3.0/24"
    AllowedPattern: (\d{1,3}\.){3}\d{1,3}(\/(1[6-9]|2[0-8]))
    ConstraintDescription: Valid Subnet CIDR is between /16 and /28
  DBUsername:
    Type: String
    Description: DB Username
    MinLength: "6"
    MaxLength: "64"
  DBPassword:
    Type: String
    Description: DB Password
    MinLength: "6"
  DBName:
    Type: String
    Description: DB name
  NetworkTemplateURL:
    Type: String
    Description: Network template URL
  SecurityTemplateURL:
    Type: String
    Description: Security template URL
  IAMTemplateURL:
    Type: String
    Description: IAM template URL
  DBTemplateURL:
    Type: String
    Description: DB instance template URL
  InstanceTemplateURL:
    Type: String
    Description: Instances template URL
Resources:
  NetworkStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        VPCCidrBlock: !Ref VPCCidrBlock
        PublicSubnetCidrBlock: !Ref PublicSubnetCidrBlock
        PrivateSubnetCidrBlock: !Ref PrivateSubnetCidrBlock
        PrivateSubnetCidrBlock2: !Ref PrivateSubnetCidrBlock2
      TemplateURL: !Ref NetworkTemplateURL
      TimeoutInMinutes: "5"
  SecurityStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        SSHCidr: !Ref SSHCidr
        PublicSubnetCidrBlock: !Sub ${NetworkStack.Outputs.PublicSubnetCidrBlock}
        VPCId: !Sub ${NetworkStack.Outputs.VPCId}
      TemplateURL: !Ref SecurityTemplateURL
      TimeoutInMinutes: "5"
  IAMStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Ref IAMTemplateURL
      TimeoutInMinutes: "5"
  DBStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Ref DBTemplateURL
      TimeoutInMinutes: "5"
      Parameters:
        DBName: !Ref DBName
        DBUsername: !Ref DBUsername
        DBPassword: !Ref DBPassword
        DBSecurityGroupID: !Sub ${SecurityStack.Outputs.DatabaseSG}
        PrivateSubnetId: !Sub ${NetworkStack.Outputs.PrivateSubnetID}
        PrivateSubnetId2: !Sub ${NetworkStack.Outputs.PrivateSubnetID2}
  InstancesStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        KeyName: !Ref KeyName
        PublicSubnetID: !Sub ${NetworkStack.Outputs.PublicSubnetID}
        BastionHostSecurityGroupID: !Sub ${SecurityStack.Outputs.BastionSG}
        InstanceSecurityGroupID: !Sub ${SecurityStack.Outputs.InstanceSG}
        IamInstanceProfileID: !Sub ${IAMStack.Outputs.InstanceProfile}
        DBName: !Ref DBName
        DBUsername: !Ref DBUsername
        DBPassword: !Ref DBPassword
        DBEndpoint: !Sub ${DBStack.Outputs.DbEndpoint}
      TimeoutInMinutes: "5"
      TemplateURL: !Ref InstanceTemplateURL
Outputs:
  BastionHostIP:
    Value: !Sub ${InstancesStack.Outputs.BastionHostIP}
  WebHostIP:
    Value: !Sub ${InstancesStack.Outputs.WebHostIP}
  WebHostDNS:
    Value: !Sub ${InstancesStack.Outputs.WebHostDNS}
        